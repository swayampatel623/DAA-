class FooBar {
private:
    int n;

public:
    FooBar(int n) {
        this->n = n;
    }

    void foo(function<void()> printFoo) {
        
        for (int i = 0; i < n; i++) {
            {
                std::unique_lock lg(mut);
                while(foo_done)
                    cv.wait(lg);

        	    // printFoo() outputs "foo". Do not change or remove this line.
        	    printFoo();
                foo_done = true;
            }
            cv.notify_one();
        }
    }

    void bar(function<void()> printBar) {
        
        for (int i = 0; i < n; i++) {
            
            {
                std::unique_lock ul(mut);
                while(!foo_done)
                    cv.wait(ul);
        	    // printBar() outputs "bar". Do not change or remove this line.
        	    printBar();
                foo_done = false;
            }
            cv.notify_one();
        }
    }

private:
    bool foo_done = false;
    std::mutex mut;
    std::condition_variable cv;
};
